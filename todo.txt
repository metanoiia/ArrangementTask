
1. Добавить класс subGraph: обеспечить проверки на совместимость с 
   другим подграфом(возвращать подграф) и проверку на совместимость с отдельной целью.
   Также нужно добавить класс, хранящий сочетание расположения плошадок, труб и итоговую стоимость (считай по формуле). 
  Пока пусть называется SolutionCombination*

2. Добавить класс graphicsView отрисовки tube и класс для pad. 

3. Алгоритм:
  
  В цикле M раз попробовать выполнить следующее:
  Матрица смежности: проходимся по целям, проверяем те вершины, которые соединены графом (где стоит 1).
  Если в текущей строке матрицы только 1 единица, то ставим площадку как можно ближе к цели (одиночная).
  Если пересекаются и ни одна не принадлежит никакому подграфу, то объединяем их в новый подграф. 
  Если вторая цель уже состоит в подграфе, то пробуем склеить два подграфа (1*), если одна из целей не принадлежит никакому подграфу,
  то пытаемся добавить в подграф рассматриваемой соседской цели. Если не удалось -- выносим в эту цель в новый подграф.	

  *При выборе точки расположения площадки в случае неудачи выбрать в радиусе размера 
  (четверти клетки) рандомную точку и проверить по признакам допустимости 
  (расстояния до рассматриваемых целей и доступность клетки), если за N попыток
  не удалось найти точку, то увеличить радиус в K раз. Если расположить цель не удалось, то перемешиваем цели и 
  переходим к следующей попытке построить граф (так M раз).
		
  При успешном расположении площадок в текущей итерации начинаем в каждом подграфе искать точки пересечения(достаточно одной), 
  там будем распологать pad.
  Далее по алгоритму Краскала находим минимальное остовное дерево (вес = расстояние * цена прокладки), 
  затем последовательно проходимся по остову и для соседей по алгоритму Ли находим путь в обход всех ограничений. 
  Если и расположить площадки и трубы удалось, то инициализируем новый экземпляр SolutionCombination* и в него спихиваем данные.
  Перемешиваем vector целей( чтобы заново потом построить матрицу смежности ).

  После завершения цикла ищем SolutionCombination* с минимальной итоговой стоимостью и выдаем ее как решение, 
  результат отрисовать на сцене.

		

		



 



